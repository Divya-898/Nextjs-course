{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mac/Documents/NextJs-Course/untitled folder/nextjs-course-code/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/mac/Documents/NextJs-Course/untitled folder/nextjs-course-code/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/mac/Documents/NextJs-Course/untitled folder/nextjs-course-code/components/auth/auth-form.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react'; // import { signIn } from 'next-auth/client';\n// import { useRouter } from 'next/router';\n\nimport classes from './auth-form.module.css';\n\nfunction createUser(_x, _x2) {\n  return _createUser.apply(this, arguments);\n}\n\nfunction _createUser() {\n  _createUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email, password) {\n    var response, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"hello\");\n            _context2.next = 3;\n            return fetch('/api/auth/signup', {\n              method: 'POST',\n              body: JSON.stringify({\n                email: email,\n                password: password\n              }),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return response.json();\n\n          case 6:\n            data = _context2.sent;\n\n            if (response.ok) {\n              _context2.next = 9;\n              break;\n            }\n\n            throw new Error(data.message || 'Something went wrong!');\n\n          case 9:\n            return _context2.abrupt(\"return\", data);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _createUser.apply(this, arguments);\n}\n\nfunction AuthForm() {\n  _s();\n\n  var emailInputRef = useRef();\n  var passwordInputRef = useRef();\n\n  var _useState = useState(true),\n      isLogin = _useState[0],\n      setIsLogin = _useState[1]; // const router = useRouter();\n\n\n  function switchAuthModeHandler() {\n    setIsLogin(function (prevState) {\n      return !prevState;\n    });\n  }\n\n  function submitHandler(_x3) {\n    return _submitHandler.apply(this, arguments);\n  }\n\n  function _submitHandler() {\n    _submitHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var enteredEmail, enteredPassword, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              enteredEmail = emailInputRef.current.value;\n              enteredPassword = passwordInputRef.current.value; // optional: Add validation\n\n              if (!isLogin) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 16;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.next = 9;\n              return createUser(enteredEmail, enteredPassword);\n\n            case 9:\n              result = _context.sent;\n              console.log(result);\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](6);\n              console.log(_context.t0);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 13]]);\n    }));\n    return _submitHandler.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthForm, \"d5MFzbQ69dYgb5LfYbTwTxIKLCk=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/Users/mac/Documents/NextJs-Course/untitled folder/nextjs-course-code/components/auth/auth-form.js"],"names":["useState","useRef","classes","createUser","email","password","console","log","fetch","method","body","JSON","stringify","headers","response","json","data","ok","Error","message","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","result","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef } from 'react';\n// import { signIn } from 'next-auth/client';\n// import { useRouter } from 'next/router';\n\nimport classes from './auth-form.module.css';\nasync function createUser(email, password) {\n  console.log(\"hello\")\n  const response = await fetch('/api/auth/signup', {\n    method: 'POST',\n    body: JSON.stringify({ email, password }),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Something went wrong!');\n  }\n\n  return data;\n}\n\nfunction AuthForm() {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const [isLogin, setIsLogin] = useState(true);\n  // const router = useRouter();\n\n  function switchAuthModeHandler() {\n    setIsLogin((prevState) => !prevState);\n  }\n\n  async function submitHandler(event) {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // optional: Add validation\n    if (isLogin) {\n      // const result = await signIn('credentials', {\n      //   redirect: false,\n      //   email: enteredEmail,\n      //   password: enteredPassword\n      // });\n\n      // if (!result.error) {\n      //   // set some auth state\n      //   router.replace('/profile');\n      // }\n    } else {\n      try {\n        const result = await createUser(enteredEmail, enteredPassword);\n        console.log(result);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input\n            type='password'\n            id='password'\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          <button\n            type='submit'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n}\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}