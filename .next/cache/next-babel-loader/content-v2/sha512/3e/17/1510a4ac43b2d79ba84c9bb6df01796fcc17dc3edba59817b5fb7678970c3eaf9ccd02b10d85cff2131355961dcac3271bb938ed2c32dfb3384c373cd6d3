{"ast":null,"code":"import NextAuth from \"next-auth\";\nimport Providers from \"next-auth/providers\";\nimport { connectToDatabase } from \"../../../lib/db\";\nimport { verifyPassword } from \"../../../lib/auth\";\nexport default NextAuth({\n  session: {\n    jwt: true\n  },\n  providers: [Providers.Credentials({\n    async authorize(credentials) {\n      const client = await connectToDatabase();\n      const userCollection = client.db().collection('users');\n      const user = await userCollection.findOne({\n        email: credentials.email\n      });\n\n      if (!user) {\n        client.close();\n        throw new Error('No user found!');\n      }\n\n      const isValid = await verifyPassword(credentials.password, user.password);\n\n      if (!isValid) {\n        client.close();\n        throw new Error('Could not log you in!');\n      }\n\n      client.close();\n      return {\n        email: user.email\n      };\n    }\n\n  })]\n});","map":{"version":3,"sources":["/Users/mac/Documents/NextJs-Course/untitled-folder/nextjs-course-code/pages/api/auth/[...nextauth].js"],"names":["NextAuth","Providers","connectToDatabase","verifyPassword","session","jwt","providers","Credentials","authorize","credentials","client","userCollection","db","collection","user","findOne","email","close","Error","isValid","password"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,eAAeH,QAAQ,CAAC;AACpBI,EAAAA,OAAO,EAAE;AACLC,IAAAA,GAAG,EAAE;AADA,GADW;AAIpBC,EAAAA,SAAS,EAAC,CACNL,SAAS,CAACM,WAAV,CAAsB;AAChB,UAAMC,SAAN,CAAgBC,WAAhB,EAA4B;AAC1B,YAAMC,MAAM,GAAG,MAAMR,iBAAiB,EAAtC;AACA,YAAMS,cAAc,GAAGD,MAAM,CAACE,EAAP,GAAYC,UAAZ,CAAuB,OAAvB,CAAvB;AACH,YAAMC,IAAI,GAAG,MAAMH,cAAc,CAACI,OAAf,CAAuB;AAACC,QAAAA,KAAK,EAAEP,WAAW,CAACO;AAApB,OAAvB,CAAnB;;AAGA,UAAG,CAACF,IAAJ,EAAS;AACNJ,QAAAA,MAAM,CAACO,KAAP;AACA,cAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN;AACF;;AAED,YAAMC,OAAO,GAAG,MAAMhB,cAAc,CAACM,WAAW,CAACW,QAAb,EAAuBN,IAAI,CAACM,QAA5B,CAApC;;AACA,UAAG,CAACD,OAAJ,EAAY;AACTT,QAAAA,MAAM,CAACO,KAAP;AACA,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACF;;AACDR,MAAAA,MAAM,CAACO,KAAP;AACA,aAAO;AAACD,QAAAA,KAAK,EAAEF,IAAI,CAACE;AAAb,OAAP;AAEA;;AApBiB,GAAtB,CADM;AAJU,CAAD,CAAvB","sourcesContent":["import NextAuth from \"next-auth\";\nimport Providers from \"next-auth/providers\";\nimport { connectToDatabase } from \"../../../lib/db\";\nimport { verifyPassword } from \"../../../lib/auth\";\n\nexport default NextAuth({\n    session: {\n        jwt: true\n    },\n    providers:[\n        Providers.Credentials({\n              async authorize(credentials){\n                const client = await connectToDatabase();\n                const userCollection = client.db().collection('users')\n             const user = await userCollection.findOne({email: credentials.email})  \n            \n            \n             if(!user){\n                client.close();\n                throw new Error('No user found!');\n             }\n\n             const isValid = await verifyPassword(credentials.password, user.password)\n             if(!isValid){\n                client.close();\n                throw new Error('Could not log you in!');\n             }\n             client.close();\n             return {email: user.email};\n            \n            }\n            \n        })\n    ]\n});"]},"metadata":{},"sourceType":"module"}